#define function addTwo(uint256, uint256) view returns(uint256)
#define function addThree(uint256, uint256, uint256) view returns(uint256)

#define macro MAIN() = takes(0) returns(0) {
    // Get the function selector
    0x00
    calldataload
    0xE0
    shr

    dup1 __FUNC_SIG(addTwo) eq addTwo jumpi
    __FUNC_SIG(addThree) eq addThree jumpi

    addTwo:
        ADD_TWO()
    addThree:
        ADD_THREE()
}

#define macro ADD_TWO() = takes(0) returns(0) {
    0x04 calldataload     // load first 32 bytes onto the stack - number 1
    0x24 calldataload     // load second 32 bytes onto the stack - number 2
    add                   // add number 1 and 2 and put the result onto the stack

    0x00 mstore           // place the result in memory
    0x20 0x00 return      // return the result
}

#define macro ADD_THREE() = takes(0) returns(0) {
    0x04 calldataload
    0x24 calldataload
    0x44 calldataload
    add
    add
    
    0x00 mstore
    0x20 0x00 return      // return the result
}